name: Build and Push Multi Docker Images with Compose

# 触发条件：推送到 main 分支或创建标签时执行
on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]  # 匹配 v1.0.0 这样的标签

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1：拉取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤 2：设置 Docker 环境（确保 compose 可用）
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # 步骤 3：登录 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 步骤 4：确定镜像标签（动态生成）
      - name: Determine image tag
        id: set-tag
        run: |
          # 如果是标签触发，用标签名（如 v1.0.0 → 1.0.0）；否则用分支名（如 main）
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/v}  # 去掉前缀 "v"
          else
            TAG=${GITHUB_REF#refs/heads/}  # 取分支名（如 main）
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV  # 保存为环境变量

      # 步骤 5：用 docker-compose 构建镜像
      - name: Build images with docker-compose
        run: |
          # 通过环境变量 TAG 传递版本号，构建前后端镜像
          TAG=${{ env.TAG }} docker-compose build

      # 步骤 6：推送镜像到 Docker Hub（分别推送两个服务的镜像）
      - name: Push backend image
        run: |
          docker push siyuan044/timelesstales-backend:${{ env.TAG }}

      - name: Push frontend image
        run: |
          docker push siyuan044/timelesstales-frontend:${{ env.TAG }}